// Code generated by mockery (devel). DO NOT EDIT.

package mocks

import (
	"context"

	model "github.com/arsura/gourney/pkg/models/pgsql"
	mock "github.com/stretchr/testify/mock"
)

// CurrencyUsecaseProvider is an autogenerated mock type for the CurrencyUsecaseProvider type
type MockCurrencyUsecaseProvider struct {
	mock.Mock
}

// Create provides a mock function with given fields: c
func (_m *MockCurrencyUsecaseProvider) Create(ctx context.Context, c *model.Currency) (int64, error) {
	ret := _m.Called(c)

	var r0 int64
	if rf, ok := ret.Get(0).(func(*model.Currency) int64); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.Currency) error); ok {
		r1 = rf(c)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindOneById provides a mock function with given fields: id
func (_m *MockCurrencyUsecaseProvider) FindOneById(ctx context.Context, id int64) (*model.Currency, error) {
	ret := _m.Called(id)

	var r0 *model.Currency
	if rf, ok := ret.Get(0).(func(int64) *model.Currency); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Currency)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
